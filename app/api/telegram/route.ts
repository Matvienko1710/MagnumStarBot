import { NextRequest, NextResponse } from 'next/server'
import { Telegraf } from 'telegraf'

const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN!)

// Start command
bot.start((ctx) => {
  ctx.reply(
    'üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Magnum Clicker!\n\n' +
    '–ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –∫–ª–∏–∫–∞–º–∏ –≤ —Å—Ç–∏–ª–µ Binance –∏ Revolut! –ö–ª–∏–∫–∞–π—Ç–µ, –æ—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –∫–µ–π—Å—ã –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –Ω–∞–≥—Ä–∞–¥—ã. –ù–∞—á–Ω–∏—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!',
    {
      reply_markup: {
        inline_keyboard: [[
          {
            text: 'üéÆ Play Game',
            web_app: { url: process.env.NEXTAUTH_URL || 'https://magnum-clicker.vercel.app' }
          }
        ]]
      }
    }
  )
})

// Help command
bot.help((ctx) => {
  ctx.reply(
    'üéÆ Magnum Clicker - –ü–æ–º–æ—â—å\n\n' +
    '–ö–ª–∏–∫–∞–π—Ç–µ –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –º–æ–Ω–µ—Ç, –æ—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –∫–µ–π—Å—ã –∑–∞ –Ω–∞–≥—Ä–∞–¥—ã, –ø–æ–≤—ã—à–∞–π—Ç–µ —É—Ä–æ–≤–µ–Ω—å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã.',
    {
      reply_markup: {
        inline_keyboard: [[
          {
            text: 'üéÆ Play Game',
            web_app: { url: process.env.NEXTAUTH_URL || 'https://magnum-clicker.vercel.app' }
          }
        ]]
      }
    }
  )
})

// Handle all other messages
bot.on('text', (ctx) => {
  ctx.reply(
    '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –∏–ª–∏ /help –¥–ª—è –ø–æ–º–æ—â–∏!',
    {
      reply_markup: {
        inline_keyboard: [[
          {
            text: 'üéÆ Play Game',
            web_app: { url: process.env.NEXTAUTH_URL || 'https://magnum-clicker.vercel.app' }
          }
        ]]
      }
    }
  )
})

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    
    // Process the update
    await bot.handleUpdate(body)
    
    return NextResponse.json({ success: true })
  } catch (error) {
    console.error('Error processing Telegram update:', error)
    return NextResponse.json({ error: 'Internal server error' }, { status: 500 })
  }
}

export async function GET() {
  return NextResponse.json({ message: 'Telegram bot is running' })
}
