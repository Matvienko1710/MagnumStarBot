// API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤—ã–∏–≥—Ä—ã—à–µ–π –∏–∑ –∫–µ–π—Å–æ–≤

let recentWins = [
  // –ù–∞—á–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  {
    id: 1,
    username: 'CryptoKing',
    item: '–î–ñ–ï–ö–ü–û–¢ –ó–≤–µ–∑–¥!',
    amount: 50,
    type: 'stars',
    timestamp: Date.now() - 60000,
    rarity: 'legendary'
  },
  {
    id: 2,
    username: 'StarHunter',
    item: '25 –ó–≤–µ–∑–¥',
    amount: 25,
    type: 'stars',
    timestamp: Date.now() - 120000,
    rarity: 'epic'
  },
  {
    id: 3,
    username: 'CoinMaster',
    item: '1000 –ú–æ–Ω–µ—Ç',
    amount: 1000,
    type: 'coins',
    timestamp: Date.now() - 180000,
    rarity: 'epic'
  },
  {
    id: 4,
    username: 'LuckyPlayer',
    item: '500 –ú–æ–Ω–µ—Ç',
    amount: 500,
    type: 'coins',
    timestamp: Date.now() - 240000,
    rarity: 'rare'
  },
  {
    id: 5,
    username: 'GamerPro',
    item: '10 –ó–≤–µ–∑–¥',
    amount: 10,
    type: 'stars',
    timestamp: Date.now() - 300000,
    rarity: 'rare'
  }
];

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≤—ã–∏–≥—Ä—ã—à–∞
export function addWin(username, item, amount, type, rarity = 'common') {
  const newWin = {
    id: Date.now(),
    username: username,
    item: item,
    amount: amount,
    type: type,
    timestamp: Date.now(),
    rarity: rarity
  };

  // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞
  recentWins = [newWin, ...recentWins.slice(0, 19)]; // –•—Ä–∞–Ω–∏–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20

  console.log(`üé∞ –ù–æ–≤—ã–π –≤—ã–∏–≥—Ä—ã—à: ${username} –≤—ã–∏–≥—Ä–∞–ª ${amount} ${type === 'stars' ? '–∑–≤–µ–∑–¥' : '–º–æ–Ω–µ—Ç'}`);
  
  return newWin;
}

// API endpoint
export default function handler(req, res) {
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  if (req.method === 'OPTIONS') {
    res.status(200).end();
    return;
  }

  if (req.method === 'GET') {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≤—ã–∏–≥—Ä—ã—à–∏
    res.status(200).json({
      success: true,
      wins: recentWins.slice(0, 10), // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10
      timestamp: Date.now()
    });
  } 
  else if (req.method === 'POST') {
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –≤—ã–∏–≥—Ä—ã—à (–¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –±–æ—Ç–æ–º)
    try {
      const { username, item, amount, type, rarity } = req.body;
      
      if (!username || !item || !amount || !type) {
        return res.status(400).json({
          success: false,
          error: '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è'
        });
      }

      const newWin = addWin(username, item, amount, type, rarity);
      
      res.status(200).json({
        success: true,
        win: newWin,
        message: '–í—ã–∏–≥—Ä—ã—à –¥–æ–±–∞–≤–ª–µ–Ω'
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—ã–∏–≥—Ä—ã—à–∞:', error);
      res.status(500).json({
        success: false,
        error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
      });
    }
  } 
  else {
    res.status(405).json({
      success: false,
      error: '–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è'
    });
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –±–æ—Ç–µ
export { addWin };
