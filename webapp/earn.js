// JavaScript –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞—Ä–∞–±–æ—Ç–∫–∞

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    initializeEarnPage();
    setupEarnEventListeners();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞—Ä–∞–±–æ—Ç–∫–∞
function initializeEarnPage() {
    console.log('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    loadUserData();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    updateEarnDisplay();
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEarnEventListeners() {
    // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    const backButton = document.getElementById('back-button');
    if (backButton) {
        backButton.addEventListener('click', goBack);
    }
    
    // –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    const dailyBonusButton = document.getElementById('daily-bonus');
    if (dailyBonusButton) {
        dailyBonusButton.addEventListener('click', () => handleQuickAction('daily_bonus'));
    }
    
    const watchAdButton = document.getElementById('watch-ad');
    if (watchAdButton) {
        watchAdButton.addEventListener('click', () => handleQuickAction('watch_ad'));
    }
    
    const completeTaskButton = document.getElementById('complete-task');
    if (completeTaskButton) {
        completeTaskButton.addEventListener('click', () => handleQuickAction('complete_task'));
    }
}

// –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
function goBack() {
    window.location.href = 'index.html';
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
function handleQuickAction(action) {
    switch (action) {
        case 'daily_bonus':
            handleDailyBonus();
            break;
        case 'watch_ad':
            handleWatchAd();
            break;
        case 'complete_task':
            handleCompleteTask();
            break;
        default:
            console.log('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:', action);
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞
function handleDailyBonus() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å
    const lastBonusDate = localStorage.getItem('lastDailyBonus');
    const today = new Date().toDateString();
    
    if (lastBonusDate === today) {
        showMessage('–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å —Å–µ–≥–æ–¥–Ω—è!', 'warning');
        return;
    }
    
    // –í—ã–¥–∞–µ–º –±–æ–Ω—É—Å
    const bonus = Math.floor(Math.random() * 10) + 5; // 5-15 –º–æ–Ω–µ—Ç
    addCoins(bonus);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–∞
    localStorage.setItem('lastDailyBonus', today);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    showMessage(`üéÅ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å: +${bonus} ü™ô Magnum Coins!`, 'success');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    updateEarnDisplay();
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∫–ª–∞–º—ã
function handleWatchAd() {
    showMessage('üì∫ –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∫–ª–∞–º—ã –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'info');
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∫–ª–∞–º—ã
    setTimeout(() => {
        const reward = Math.floor(Math.random() * 3) + 1; // 1-3 –º–æ–Ω–µ—Ç—ã
        addCoins(reward);
        showMessage(`üì∫ –†–µ–∫–ª–∞–º–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–∞! +${reward} ü™ô Magnum Coins`, 'success');
        updateEarnDisplay();
    }, 2000);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
function handleCompleteTask() {
    showMessage('‚úÖ –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'info');
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
    setTimeout(() => {
        const reward = Math.floor(Math.random() * 5) + 2; // 2-6 –º–æ–Ω–µ—Ç
        addCoins(reward);
        showMessage(`‚úÖ –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! +${reward} ü™ô Magnum Coins`, 'success');
        updateEarnDisplay();
    }, 1500);
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–æ–Ω–µ—Ç
function addCoins(amount) {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –∏–∑ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (window.magnumStarBot) {
        window.magnumStarBot.addCoins(amount);
    } else {
        // –ï—Å–ª–∏ –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º localStorage
        const data = localStorage.getItem('magnumStarBotData');
        if (data) {
            const parsed = JSON.parse(data);
            parsed.coinsBalance = (parsed.coinsBalance || 0) + amount;
            localStorage.setItem('magnumStarBotData', JSON.stringify(parsed));
        }
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function loadUserData() {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
    const data = localStorage.getItem('magnumStarBotData');
    if (data) {
        const parsed = JSON.parse(data);
        window.userData = {
            coinsBalance: parsed.coinsBalance || 0,
            starsBalance: parsed.starsBalance || 0,
            totalClicks: parsed.totalClicks || 0,
            clicksToday: parsed.clicksToday || 0
        };
    } else {
        window.userData = {
            coinsBalance: 0,
            starsBalance: 0,
            totalClicks: 0,
            clicksToday: 0
        };
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
function updateEarnDisplay() {
    if (!window.userData) return;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞—Ä–∞–±–æ—Ç–∫–∞
    const earnedTodayElement = document.getElementById('earned-today');
    const totalEarnedElement = document.getElementById('total-earned');
    const activityLevelElement = document.getElementById('activity-level');
    
    if (earnedTodayElement) {
        earnedTodayElement.textContent = `${window.userData.clicksToday} ü™ô`;
    }
    
    if (totalEarnedElement) {
        totalEarnedElement.textContent = `${window.userData.totalClicks} ü™ô`;
    }
    
    if (activityLevelElement) {
        const level = getActivityLevel(window.userData.totalClicks);
        activityLevelElement.textContent = level;
    }
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
function getActivityLevel(totalClicks) {
    if (totalClicks < 10) return '–ù–æ–≤–∏—á–æ–∫';
    if (totalClicks < 50) return '–ê–∫—Ç–∏–≤–Ω—ã–π';
    if (totalClicks < 100) return '–û–ø—ã—Ç–Ω—ã–π';
    if (totalClicks < 200) return '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª';
    if (totalClicks < 500) return '–ú–∞—Å—Ç–µ—Ä';
    return '–õ–µ–≥–µ–Ω–¥–∞';
}

// –ü–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏–π
function showMessage(message, type = 'info') {
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    const messageElement = document.createElement('div');
    messageElement.className = `message message-${type}`;
    messageElement.textContent = message;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
    messageElement.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 15px 20px;
        border-radius: 10px;
        color: white;
        font-weight: bold;
        z-index: 1000;
        animation: slideIn 0.3s ease-out;
        max-width: 300px;
        word-wrap: break-word;
        box-shadow: 0 4px 15px rgba(0,0,0,0.2);
    `;
    
    // –¶–≤–µ—Ç–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
    const colors = {
        success: '#4CAF50',
        warning: '#FF9800',
        error: '#F44336',
        info: '#2196F3'
    };
    
    messageElement.style.backgroundColor = colors[type] || colors.info;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    document.body.appendChild(messageElement);
    
    // –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        if (messageElement.parentNode) {
            messageElement.parentNode.removeChild(messageElement);
        }
    }, 3000);
}

// –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏–∏
const style = document.createElement('style');
style.textContent = `
    @keyframes slideIn {
        from {
            transform: translateX(100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }
    
    .method-card {
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .method-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 35px rgba(0,0,0,0.15);
    }
    
    .quick-button {
        transition: all 0.3s ease;
    }
    
    .quick-button:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(255, 154, 158, 0.5);
    }
    
    .quick-button:active {
        transform: translateY(0);
    }
`;
document.head.appendChild(style);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
window.addEventListener('error', function(e) {
    console.error('–û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∑–∞—Ä–∞–±–æ—Ç–∫–∞:', e.error);
    showMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏', 'error');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ unhandled promise rejections
window.addEventListener('unhandledrejection', function(e) {
    console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–æ–º–∏—Å–∞:', e.reason);
    showMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏', 'error');
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
setInterval(() => {
    loadUserData();
    updateEarnDisplay();
}, 5000);
