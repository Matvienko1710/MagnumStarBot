// MagnumStarBot WebApp JavaScript
document.addEventListener('DOMContentLoaded', function() {
    console.log('MagnumStarBot WebApp –∑–∞–≥—Ä—É–∂–µ–Ω');

    // –ü–æ–ª—É—á–∞–µ–º userId –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–ª–∏ localStorage
    const urlParams = new URLSearchParams(window.location.search);
    let userId = urlParams.get('userId') || localStorage.getItem('magnumBot_userId');

    if (!userId) {
        // –ï—Å–ª–∏ userId –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –¥–ª—è –≤–≤–æ–¥–∞
        showUserIdPrompt();
        return;
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º userId –≤ localStorage –¥–ª—è –±—É–¥—É—â–∏—Ö –ø–æ—Å–µ—â–µ–Ω–∏–π
    localStorage.setItem('magnumBot_userId', userId);

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    loadUserData(userId);

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –ø–∞–Ω–µ–ª–∏ –±–∞–ª–∞–Ω—Å–∞
    const balanceNavbar = document.querySelector('.balance-navbar');
    balanceNavbar.style.transform = 'translateY(-100%)';
    balanceNavbar.style.opacity = '0';

    setTimeout(() => {
        balanceNavbar.style.transition = 'all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
        balanceNavbar.style.transform = 'translateY(0)';
        balanceNavbar.style.opacity = '1';
    }, 300);

    // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    async function loadUserData(userId) {
        try {
            console.log(`üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}...`);

            // –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–ª–∞–Ω—Å
            await loadUserBalance(userId);

            // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
            await loadUserProfile(userId);

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
            showError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    async function loadUserBalance(userId) {
        try {
            const response = await fetch(`/api/balance/${userId}`);
            const data = await response.json();

            if (data.success) {
                console.log('‚úÖ –ë–∞–ª–∞–Ω—Å –∑–∞–≥—Ä—É–∂–µ–Ω:', data.data);

                // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –∑–≤–µ–∑–¥
                updateBalanceDisplay('stars', data.data.stars);

                // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –º–∞–≥–Ω—É–º –∫–æ–∏–Ω–æ–≤
                updateBalanceDisplay('magnum', data.data.magnumCoins);

                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
                showBalanceUpdate();

            } else {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:', data.error);
                showError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –±–∞–ª–∞–Ω—Å');
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –±–∞–ª–∞–Ω—Å–∞:', error);
            showError('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    async function loadUserProfile(userId) {
        try {
            const response = await fetch(`/api/profile/${userId}`);
            const data = await response.json();

            if (data.success) {
                console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω:', data.data);

                // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                updateUserInfo(data.data);
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error);
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    function updateBalanceDisplay(type, amount) {
        const balanceElement = document.getElementById(`${type}-balance`);
        if (balanceElement) {
            const currentAmount = parseInt(balanceElement.textContent.replace(',', '') || '0');
            const targetAmount = amount;

            // –ê–Ω–∏–º–∞—Ü–∏—è —Å—á–µ—Ç—á–∏–∫–∞
            animateNumber(balanceElement, currentAmount, targetAmount, 1000);
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞
    function showBalanceUpdate() {
        // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const notification = document.createElement('div');
        notification.textContent = '–ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª–µ–Ω';
        notification.style.cssText = `
            position: fixed;
            top: 100px;
            right: 20px;
            background: rgba(0, 110, 46, 0.9);
            color: white;
            padding: 10px 20px;
            border-radius: 25px;
            font-size: 14px;
            z-index: 10000;
            animation: fadeIn 0.3s ease;
        `;

        document.body.appendChild(notification);

        setTimeout(() => {
            notification.style.animation = 'fadeOut 0.3s ease';
            setTimeout(() => notification.remove(), 300);
        }, 2000);
    }

    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    function updateUserInfo(profile) {
        console.log('üìä –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', profile);

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const headerTitle = document.querySelector('.header h1');
        if (profile.username) {
            headerTitle.textContent = `–ü—Ä–∏–≤–µ—Ç, ${profile.username}!`;
        } else if (profile.firstName) {
            headerTitle.textContent = `–ü—Ä–∏–≤–µ—Ç, ${profile.firstName}!`;
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userStats = document.getElementById('user-stats');

        if (profile.balance && profile.balance.totalEarned) {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞—Ä–∞–±–æ—Ç–∫–∞
            const totalEarnedStars = document.getElementById('total-earned-stars');
            const totalEarnedCoins = document.getElementById('total-earned-coins');

            if (totalEarnedStars) {
                totalEarnedStars.textContent = `${profile.balance.totalEarned.stars.toLocaleString()} ‚≠ê`;
            }
            if (totalEarnedCoins) {
                totalEarnedCoins.textContent = `${profile.balance.totalEarned.coins.toLocaleString()} ü™ô`;
            }

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            userStats.style.display = 'block';
        }


    }

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Ñ–æ—Ä–º—ã –¥–ª—è –≤–≤–æ–¥–∞ userId
    function showUserIdPrompt() {
        const promptDiv = document.createElement('div');
        promptDiv.innerHTML = `
            <div style="
                position: fixed;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: rgba(0, 0, 0, 0.8);
                display: flex;
                justify-content: center;
                align-items: center;
                z-index: 10000;
            ">
                <div style="
                    background: white;
                    padding: 30px;
                    border-radius: 20px;
                    text-align: center;
                    max-width: 400px;
                    width: 90%;
                ">
                    <h2 style="margin-bottom: 20px; color: #006e2e;">–í–≤–µ–¥–∏—Ç–µ –≤–∞—à User ID</h2>
                    <p style="margin-bottom: 20px; color: #666;">
                        User ID –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ Telegram –±–æ—Ç–µ –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ @userinfobot
                    </p>
                    <input type="text" id="userIdInput" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 123456789"
                           style="width: 100%; padding: 10px; margin-bottom: 20px; border: 1px solid #ddd; border-radius: 5px; font-size: 16px;">
                    <button id="submitUserId" style="
                        background: #006e2e;
                        color: white;
                        border: none;
                        padding: 12px 30px;
                        border-radius: 25px;
                        font-size: 16px;
                        cursor: pointer;
                        width: 100%;
                    ">–í–æ–π—Ç–∏</button>
                </div>
            </div>
        `;

        document.body.appendChild(promptDiv);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏
        document.getElementById('submitUserId').addEventListener('click', function() {
            const userId = document.getElementById('userIdInput').value.trim();
            if (userId) {
                localStorage.setItem('magnumBot_userId', userId);
                promptDiv.remove();
                loadUserData(userId);
            } else {
                alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ User ID');
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏—à–∏ Enter
        document.getElementById('userIdInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                document.getElementById('submitUserId').click();
            }
        });
    }

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –æ—à–∏–±–æ–∫
    function showError(message) {
        const errorDiv = document.createElement('div');
        errorDiv.textContent = message;
        errorDiv.style.cssText = `
            position: fixed;
            top: 100px;
            left: 20px;
            background: #ff4444;
            color: white;
            padding: 10px 20px;
            border-radius: 25px;
            font-size: 14px;
            z-index: 10000;
            animation: fadeIn 0.3s ease;
        `;

        document.body.appendChild(errorDiv);

        setTimeout(() => {
            errorDiv.style.animation = 'fadeOut 0.3s ease';
            setTimeout(() => errorDiv.remove(), 300);
        }, 3000);
    }

    // –ê–Ω–∏–º–∞—Ü–∏—è —á–∏—Å–µ–ª
    function animateNumber(element, start, end, duration) {
        const startTime = performance.now();
        const difference = end - start;

        function update(currentTime) {
            const elapsed = currentTime - startTime;
            const progress = Math.min(elapsed / duration, 1);

            // –ò—Å–ø–æ–ª—å–∑—É–µ–º easeOut —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–ª–∞–≤–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
            const easeOutProgress = 1 - Math.pow(1 - progress, 3);
            const current = Math.round(start + difference * easeOutProgress);

            element.textContent = current.toLocaleString();

            if (progress < 1) {
                requestAnimationFrame(update);
            }
        }

        requestAnimationFrame(update);
    }

    // –ü—É–ª—å—Å–∏—Ä—É—é—â–∏–π —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –±–∞–ª–∞–Ω—Å–∞
    function addPulseEffect() {
        const balanceItems = document.querySelectorAll('.balance-item');

        balanceItems.forEach((item, index) => {
            setTimeout(() => {
                item.style.animation = 'pulse 2s infinite';
            }, index * 500);
        });
    }

    // –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏—é pulse
    const style = document.createElement('style');
    style.textContent = `
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }
    `;
    document.head.appendChild(style);

    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—É–ª—å—Å–∏—Ä—É—é—â–∏–π —ç—Ñ—Ñ–µ–∫—Ç —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(addPulseEffect, 2000);

    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    setInterval(() => loadUserBalance(userId), 30000);



    // –ü—Ä–æ—Å—Ç–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
    const header = document.querySelector('.header h1');
    let hue = 0;

    setInterval(() => {
        hue = (hue + 1) % 360;
        header.style.textShadow = `2px 2px 4px rgba(0, 0, 0, 0.5), 0 0 10px hsl(${hue}, 70%, 50%)`;
    }, 50);
});
