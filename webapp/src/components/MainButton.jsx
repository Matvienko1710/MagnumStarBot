import React, { useState } from 'react'
import { useTelegram } from '../context/TelegramContext'

const MainButton = () => {
  const { updateBalance, balance } = useTelegram()
  const [isAnimating, setIsAnimating] = useState(false)
  const [clickCount, setClickCount] = useState(0)

  const handleClick = async () => {
    setIsAnimating(true)
    setClickCount(prev => prev + 1)
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
    await updateBalance(1)
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ 300ms
    setTimeout(() => {
      setIsAnimating(false)
    }, 300)
  }

  return (
    <div className="flex flex-col items-center justify-center space-y-6 py-8">
      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª–∏–∫–æ–≤ */}
      <div className="text-center">
        <div className="text-2xl font-bold text-gray-700 mb-2">
          –í—Å–µ–≥–æ –∫–ª–∏–∫–æ–≤: {clickCount}
        </div>
        <div className="text-sm text-gray-500">
          –ö–∞–∂–¥—ã–π –∫–ª–∏–∫ = +1 ‚≠ê
        </div>
      </div>

      {/* –ì–ª–∞–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ */}
      <div className="relative">
        <button
          onClick={handleClick}
          disabled={isAnimating}
          className={`
            relative w-48 h-48 rounded-full 
            bg-gradient-to-br from-yellow-400 via-yellow-500 to-yellow-600
            hover:from-yellow-500 hover:via-yellow-600 hover:to-yellow-700
            active:from-yellow-600 active:via-yellow-700 active:to-yellow-800
            transform transition-all duration-200 ease-out
            shadow-2xl hover:shadow-3xl
            ${isAnimating ? 'scale-95' : 'hover:scale-105'}
            disabled:cursor-not-allowed
            flex items-center justify-center
          `}
        >
          {/* –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫—Ä—É–≥ */}
          <div className="w-40 h-40 rounded-full bg-gradient-to-br from-yellow-300 to-yellow-400 flex items-center justify-center">
            <span className="text-6xl font-bold text-white select-none">
              ‚≠ê
            </span>
          </div>

          {/* –ê–Ω–∏–º–∞—Ü–∏—è –∫–ª–∏–∫–∞ */}
          {isAnimating && (
            <div className="absolute inset-0 rounded-full bg-yellow-300 animate-ping opacity-75"></div>
          )}
        </button>

        {/* –≠—Ñ—Ñ–µ–∫—Ç —á–∞—Å—Ç–∏—Ü –ø—Ä–∏ –∫–ª–∏–∫–µ */}
        {isAnimating && (
          <div className="absolute inset-0 pointer-events-none">
            {[...Array(6)].map((_, i) => (
              <div
                key={i}
                className="absolute w-3 h-3 bg-yellow-400 rounded-full animate-bounce"
                style={{
                  left: '50%',
                  top: '50%',
                  transform: `translate(-50%, -50%) rotate(${i * 60}deg) translateY(-60px)`,
                  animationDelay: `${i * 50}ms`,
                  animationDuration: '1s'
                }}
              />
            ))}
          </div>
        )}
      </div>

      {/* –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å */}
      <div className="text-center">
        <div className="text-lg font-semibold text-gray-700 mb-1">
          –í–∞—à –±–∞–ª–∞–Ω—Å:
        </div>
        <div className="text-3xl font-bold text-yellow-600">
          {balance.stars} ‚≠ê
        </div>
      </div>

      {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ */}
      <div className="text-center text-sm text-gray-500 max-w-xs">
        üí° –ö–ª–∏–∫–∞–π—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ, —á—Ç–æ–±—ã –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å Stars! 
        –ö–∞–∂–¥—ã–π –∫–ª–∏–∫ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≤–∞—à –±–∞–ª–∞–Ω—Å –Ω–∞ 1 –∑–≤–µ–∑–¥—É.
      </div>
    </div>
  )
}

export default MainButton
