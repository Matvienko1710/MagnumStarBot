// –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∏—Ç—É–ª–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const dataManager = require('./dataManager');
const logger = require('./logger');

// –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏—Ç—É–ª—ã
const AVAILABLE_TITLES = {
  NOVICE: {
    id: 'novice',
    name: '–ù–æ–≤–∏—á–æ–∫',
    description: '–ù–∞—á–∏–Ω–∞—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    color: 'üü¢',
    rarity: 'common',
    isDefault: true
  },
  OWNER: {
    id: 'owner',
    name: '–í–ª–∞–¥–µ–ª–µ—Ü',
    description: '–ü—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    color: 'üü°',
    rarity: 'rare',
    isDefault: false
  }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∏—Ç—É–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const initializeUserTitles = async (userId) => {
  try {
    const user = await dataManager.getUser(userId);
    return user.titles;
  } catch (error) {
    logger.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–∏—Ç—É–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', error, { userId });
    return {
      current: 'novice',
      unlocked: ['novice'],
      history: []
    };
  }
};

// –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ç–∏—Ç—É–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ—Ç–∫–ª—é—á–µ–Ω)
const getUserCurrentTitle = async (userId) => {
  logger.debug('‚õî –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ç–∏—Ç—É–ª–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω', { userId });
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–∏—Ç—É–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  return AVAILABLE_TITLES.NOVICE;
};

// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–∏—Ç—É–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ—Ç–∫–ª—é—á–µ–Ω)
const getUserUnlockedTitles = async (userId) => {
  logger.debug('‚õî –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ç–∏—Ç—É–ª–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω', { userId });
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–∏—Ç—É–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  return [AVAILABLE_TITLES.NOVICE];
};

// –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∏—Ç—É–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ—Ç–∫–ª—é—á–µ–Ω)
const setUserTitle = async (userId, titleId) => {
  logger.debug('‚õî –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ç–∏—Ç—É–ª–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω', { userId, titleId });
  // –ù–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—Ö
  return { success: true, message: '–¢–∏—Ç—É–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ—Ç–∫–ª—é—á–µ–Ω)' };
    await dataManager.updateUser(userId, {
      'titles.current': titleId,
      'titles.history': [...user.titles.history, {
        titleId: titleId,
        timestamp: new Date(),
        action: 'set'
      }]
    });
    
    logger.info('–¢–∏—Ç—É–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑–º–µ–Ω–µ–Ω', { userId, oldTitle, newTitle: titleId });
    
    return {
      oldTitle: AVAILABLE_TITLES[oldTitle.toUpperCase()],
      newTitle: AVAILABLE_TITLES[titleKey]
    };
    
  } catch (error) {
    logger.error('–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–∏—Ç—É–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', error, { userId, titleId });
    throw error;
  }
};

// –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Ç–∏—Ç—É–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ—Ç–∫–ª—é—á–µ–Ω)
const unlockTitle = async (userId, titleId) => {
  logger.debug('‚õî –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ç–∏—Ç—É–ª–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω', { userId, titleId });
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–∏—Ç—É–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  return AVAILABLE_TITLES.NOVICE;
};

// –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∏—Ç—É–ª–µ
const getTitleInfo = (titleId) => {
  const titleKey = titleId.toUpperCase();
  return AVAILABLE_TITLES[titleKey] || null;
};

// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏—Ç—É–ª—ã
const getAllAvailableTitles = () => {
  return Object.values(AVAILABLE_TITLES);
};

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ —Ç–∏—Ç—É–ª —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ—Ç–∫–ª—é—á–µ–Ω)
const isTitleUnlocked = async (userId, titleId) => {
  logger.debug('‚õî –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ç–∏—Ç—É–ª–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω', { userId, titleId });
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º true —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–∏—Ç—É–ª–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  return titleId.toLowerCase() === 'novice';
};

// –ü–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ç–∏—Ç—É–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ—Ç–∫–ª—é—á–µ–Ω)
const getUserTitleHistory = async (userId) => {
  logger.debug('‚õî –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ç–∏—Ç—É–ª–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω', { userId });
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é –∏—Å—Ç–æ—Ä–∏—é
  return [];
};

module.exports = {
  // –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
  getUserCurrentTitle,
  getUserUnlockedTitles,
  setUserTitle,
  unlockTitle,
  
  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∏—Ç—É–ª–∞—Ö
  getTitleInfo,
  getAllAvailableTitles,
  
  // –£—Ç–∏–ª–∏—Ç—ã
  isTitleUnlocked,
  getUserTitleHistory,
  initializeUserTitles,
  
  // –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
  AVAILABLE_TITLES
};
