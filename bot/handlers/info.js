const { inlineKeyboard } = require('../keyboards/inline');

module.exports = (bot) => {
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /info
  bot.command('info', async (ctx) => {
    await ctx.reply(
      '‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:\n\n' +
      'Magnum Star Bot - –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Telegram WebApp.\n\n' +
      '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:',
      inlineKeyboard()
    );
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /menu
  bot.command('menu', async (ctx) => {
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', inlineKeyboard());
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  bot.on('text', async (ctx) => {
    const text = ctx.message.text.toLowerCase();
    
    switch (text) {
      case '–º–µ–Ω—é':
      case 'menu':
      case '–∫–Ω–æ–ø–∫–∏':
      case 'buttons':
        await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', inlineKeyboard());
        break;
        
      case '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
      case 'statistics':
        await ctx.reply(
          'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:\n\n' +
          'üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 0\n' +
          'üì± –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π: 0\n' +
          'üîÑ –ó–∞–ø—Ä–æ—Å–æ–≤ —Å–µ–≥–æ–¥–Ω—è: 0\n' +
          '‚≠ê –†–µ–π—Ç–∏–Ω–≥: 5.0/5.0',
          inlineKeyboard()
        );
        break;
        
      case '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
      case 'about':
      case '–æ –±–æ—Ç–µ':
        await ctx.reply(
          '‚ÑπÔ∏è –û –±–æ—Ç–µ:\n\n' +
          'Magnum Star Bot - –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π Telegram –±–æ—Ç.\n\n' +
          'üîß –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n' +
          '‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏\n' +
          '‚Ä¢ WebApp –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n' +
          '‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n' +
          '‚Ä¢ –£–¥–æ–±–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è',
          inlineKeyboard()
        );
        break;
        
      case '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏':
      case 'settings':
        await ctx.reply(
          '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:\n\n' +
          'üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –í–∫–ª—é—á–µ–Ω—ã\n' +
          'üåô –¢–µ–º–∞: –ê–≤—Ç–æ\n' +
          'üåç –Ø–∑—ã–∫: –†—É—Å—Å–∫–∏–π\n' +
          'üì± –í–µ—Ä—Å–∏—è: 1.0.0\n\n' +
          '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è.',
          inlineKeyboard()
        );
        break;
        
      case '–≤–µ–±':
      case 'webapp':
      case 'web':
        await ctx.reply('–û—Ç–∫—Ä—ã–≤–∞–µ–º WebApp:', inlineKeyboard());
        break;
        
      default:
        await ctx.reply(
          '–ù–µ –ø–æ–Ω–∏–º–∞—é –∫–æ–º–∞–Ω–¥—É. –ù–∞–ø–∏—à–∏—Ç–µ "–º–µ–Ω—é" –¥–ª—è –ø–æ–∫–∞–∑–∞ –∫–Ω–æ–ø–æ–∫ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /info',
          inlineKeyboard()
        );
    }
  });
};