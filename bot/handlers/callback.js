const { inlineKeyboard, inlineKeyboardWithBack, adminPanelKeyboard, createKeyKeyboard } = require('../keyboards/inline');
const { generateUserProfile } = require('../utils/profile');
const { getUserBalance, getUserStats, getTransactionHistory } = require('../utils/currency');
const { isAdmin, getAdminStats, getBotStats } = require('../utils/admin');
const { activateKey, getUserKeyHistory, createKey, getKeysStats } = require('../utils/keys');

// –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ë–î)
const userStates = new Map();

module.exports = (bot) => {
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–±—ç–∫–æ–≤ –æ—Ç –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
  bot.on('callback_query', async (ctx) => {
    const callbackData = ctx.callbackQuery.data;
    const userId = ctx.from.id;
    const adminStatus = isAdmin(userId);
    
    switch (callbackData) {
      case 'profile':
        await ctx.answerCbQuery();
        const user = ctx.from;
        const userName = user.first_name || '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –≤–∞–ª—é—Ç—ã
        const balance = getUserBalance(userId);
        const currencyStats = getUserStats(userId);
        const keyHistory = getUserKeyHistory(userId);
        
        const profileMessage = `üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:

üë§ –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
‚îú ID: ${userId}
‚îú –ò–º—è: ${userName}
‚îú Username: ${user.username || '–ù–µ —É–∫–∞–∑–∞–Ω'}
‚îî –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${new Date().toLocaleDateString('ru-RU')}

üíé –ë–∞–ª–∞–Ω—Å
‚îú ‚≠ê Stars: ${balance.stars}
‚îî ü™ô Magnum Coins: ${balance.coins}

üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
‚îú –†–µ—Ñ–µ—Ä–∞–ª—ã: 0
‚îú –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: 0 Stars
‚îî –£—Ä–æ–≤–µ–Ω—å: –ù–æ–≤–∏—á–æ–∫

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
‚îú –í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${currencyStats.totalTransactions}
‚îú –í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ Stars: ${currencyStats.totalEarned.stars}
‚îú –í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ Coins: ${currencyStats.totalEarned.coins}
‚îú –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –∫–ª—é—á–µ–π: ${keyHistory.length}
‚îî –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥: –°–µ–≥–æ–¥–Ω—è`;
        
        await ctx.editMessageText(profileMessage, inlineKeyboardWithBack(adminStatus));
        break;
      
      case 'activate_key':
        await ctx.answerCbQuery();
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∫–ª—é—á–∞
        userStates.set(userId, { state: 'waiting_for_key', timestamp: Date.now() });
        
        await ctx.editMessageText(
          'üîë –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫–ª—é—á–∞:\n\n' +
          '–í–≤–µ–¥–∏—Ç–µ 12-–∑–Ω–∞—á–Ω—ã–π –∫–ª—é—á –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:\n\n' +
          'üìù –§–æ—Ä–º–∞—Ç: XXXXXXXXXXXX\n' +
          'üí° –ü—Ä–∏–º–µ—Ä: ABC123DEF456\n\n' +
          '‚ùå –î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ "–æ—Ç–º–µ–Ω–∞"',
          inlineKeyboardWithBack(adminStatus)
        );
        break;
      
      case 'admin_panel':
        if (!adminStatus) {
          await ctx.answerCbQuery('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
          return;
        }
        
        await ctx.answerCbQuery();
        const adminStats = getAdminStats();
        const botStats = getBotStats();
        
        const adminMessage = `üîß –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å:

üë• –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã
‚îú –í—Å–µ–≥–æ –∞–¥–º–∏–Ω–æ–≤: ${adminStats.totalAdmins}
‚îú ID –∞–¥–º–∏–Ω–æ–≤: ${adminStats.adminIds.join(', ') || '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã'}
‚îî –í–∞—à —Å—Ç–∞—Ç—É—Å: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä

ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
‚îú –í–µ—Ä—Å–∏—è: ${adminStats.botInfo.version}
‚îú –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${Math.floor(adminStats.botInfo.uptime / 60)} –º–∏–Ω
‚îú –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${adminStats.botInfo.platform}
‚îî –ü–∞–º—è—Ç—å: ${Math.round(adminStats.botInfo.memory.heapUsed / 1024 / 1024)} MB

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
‚îú –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${botStats.totalUsers}
‚îú –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${botStats.activeUsers}
‚îú –í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${botStats.totalTransactions}
‚îî –í—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞: ${new Date(botStats.serverTime).toLocaleString('ru-RU')}`;
        
        await ctx.editMessageText(adminMessage, adminPanelKeyboard());
        break;
      
      case 'create_key':
        if (!adminStatus) {
          await ctx.answerCbQuery('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
          return;
        }
        
        await ctx.answerCbQuery();
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª—é—á–∞
        userStates.set(userId, { 
          state: 'creating_key', 
          step: 'stars',
          data: {},
          timestamp: Date.now() 
        });
        
        await ctx.editMessageText(
          'üîë –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞:\n\n' +
          '–®–∞–≥ 1/4: –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ Stars –¥–ª—è –Ω–∞–≥—Ä–∞–¥—ã\n\n' +
          'üí° –ü—Ä–∏–º–µ—Ä: 50\n' +
          '‚ùå –î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ "–æ—Ç–º–µ–Ω–∞"',
          createKeyKeyboard()
        );
        break;
      
      case 'keys_stats':
        if (!adminStatus) {
          await ctx.answerCbQuery('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
          return;
        }
        
        await ctx.answerCbQuery();
        const keysStats = getKeysStats();
        
        const keysStatsMessage = `üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª—é—á–µ–π:

üîë –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
‚îú –í—Å–µ–≥–æ –∫–ª—é—á–µ–π: ${keysStats.totalKeys}
‚îú –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª—é—á–µ–π: ${keysStats.activeKeys}
‚îî –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π: ${keysStats.totalUses}

üìã –°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π:
${keysStats.keys.map(key => 
  `‚îú ${key.key} (${key.isActive ? '‚úÖ' : '‚ùå'})
  ‚îÇ  ‚îú –ù–∞–≥—Ä–∞–¥–∞: ${key.reward.stars}‚≠ê ${key.reward.coins}ü™ô
  ‚îÇ  ‚îú –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: ${key.currentUses}/${key.maxUses}
  ‚îÇ  ‚îî –û–ø–∏—Å–∞–Ω–∏–µ: ${key.description}`
).join('\n')}`;
        
        await ctx.editMessageText(keysStatsMessage, adminPanelKeyboard());
        break;
      
      case 'webapp':
        if (!adminStatus) {
          await ctx.answerCbQuery('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
          return;
        }
        
        await ctx.answerCbQuery();
        await ctx.editMessageText(
          'üåê WebApp - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:\n\n' +
          'üì± –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n' +
          'üìä –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n' +
          'üéÆ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è\n' +
          'üí¨ –ß–∞—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π\n\n' +
          '–û—Ç–∫—Ä—ã–≤–∞–µ–º WebApp...',
          inlineKeyboardWithBack(adminStatus)
        );
        break;
      
      case 'back':
        await ctx.answerCbQuery();
        // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        userStates.delete(userId);
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –º–µ–Ω—é (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –∫ –≥–ª–∞–≤–Ω–æ–º—É)
        const welcomeMessage = generateUserProfile(ctx.from);
        await ctx.editMessageText(welcomeMessage, inlineKeyboard(adminStatus));
        break;
      
      case 'main_menu':
        await ctx.answerCbQuery();
        // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        userStates.delete(userId);
        const mainMenuMessage = generateUserProfile(ctx.from);
        await ctx.editMessageText(mainMenuMessage, inlineKeyboard(adminStatus));
        break;
      
      default:
        await ctx.answerCbQuery('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞');
    }
  });
};