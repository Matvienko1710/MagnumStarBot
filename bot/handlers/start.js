const { Markup } = require('telegraf');
const logger = require('../utils/logger');
const dataManager = require('../utils/dataManager');

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async function startHandler(ctx) {
    try {
        const userId = ctx.from.id;
        const startPayload = ctx.startPayload; // –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥
        
        logger.info('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start', { userId, startPayload });
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try {
            if (startPayload) {
                // –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É
                await dataManager.setupReferral(userId, startPayload);
                logger.info('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', { userId, referrerCode: startPayload });
            } else {
                // –ï—Å–ª–∏ –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞, —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
                await dataManager.setupReferral(userId);
                logger.info('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω –±–µ–∑ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞', { userId });
            }
        } catch (error) {
            logger.error('–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã', error, { userId, startPayload });
            // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –¥–∞–∂–µ –µ—Å–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞
        }
        
        const welcomeMessage = `üöÄ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Magnum Stars!**\n\n` +
            `üíé –¢–≤–æ–π –ø—É—Ç—å –∫ –Ω–∞–≥—Ä–∞–¥–∞–º —É–∂–µ –Ω–∞—á–∞–ª—Å—è!\n\n` +
            `üéÆ –ò–≥—Ä–∞–π –≤ Magnum Stars, –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π Magnum Coins, –æ–±–º–µ–Ω–∏–≤–∞–π –∏—Ö –Ω–∞ ‚≠ê –∏ –≤—ã–≤–æ–¥–∏ –ø—Ä—è–º–æ –≤ –±–æ—Ç–µ!\n\n` +
            `üë§ **–ü—Ä–æ—Ñ–∏–ª—å**\n` +
            `‚îú üÜî ID: \`${userId}\`\n` +
            `‚îî ‚ú® –ò–º—è: ${ctx.from.first_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n\n` +
            `üíé **–ë–∞–ª–∞–Ω—Å**\n` +
            `‚îú ‚≠ê Stars: 0\n` +
            `‚îî ü™ô Magnum Coins: 0\n\n` +
            `üìä **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ**\n` +
            `‚îú üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 0\n` +
            `‚îî üíé –í—Å–µ–≥–æ –≤—ã–≤–µ–¥–µ–Ω–æ: 0 ‚≠ê\n\n` +
            `üéØ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏ –¥–≤–∏–≥–∞–π—Ç–µ—Å—å –¥–∞–ª—å—à–µ üöÄ`;
        
        const mainMenu = Markup.inlineKeyboard([
            [Markup.button.callback('üí∞ –ú–∞–π–Ω–µ—Ä—ã', 'miners')],
            [Markup.button.callback('üë§ –ü—Ä–æ—Ñ–∏–ª—å', 'profile')],
            [Markup.button.callback('‚≠ê –í—ã–≤–µ—Å—Ç–∏ –∑–≤–µ–∑–¥—ã', 'withdraw')],
            [Markup.button.callback('üîë –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á', 'activate_key')],
            [Markup.button.webApp('üåê WebApp', 'https://magnumstarbot.onrender.com')],
            [Markup.button.callback('‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å', 'admin_panel')]
        ]);
        
        await ctx.reply(welcomeMessage, {
            parse_mode: 'Markdown',
            reply_markup: mainMenu.reply_markup
        });
        
        logger.info('–ö–æ–º–∞–Ω–¥–∞ /start —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞', { userId });
        
    } catch (error) {
        logger.error('–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–æ–º–∞–Ω–¥—ã /start', error, { userId: ctx?.from?.id });
        
        const errorMessage = `‚ùå **–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞**\n\n` +
            `üö´ –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n` +
            `üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É`;
        
        const errorKeyboard = Markup.inlineKeyboard([
            [Markup.button.callback('üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞', 'start')]
        ]);
        
        await ctx.reply(errorMessage, {
            parse_mode: 'Markdown',
            reply_markup: errorKeyboard.reply_markup
        });
    }
}

module.exports = startHandler;