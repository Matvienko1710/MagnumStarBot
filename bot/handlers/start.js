const { Markup } = require('telegraf');
const logger = require('../utils/logger');
const { getUserBalance } = require('../utils/currency');
const { getReferralStats } = require('../utils/referral');

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async function startHandler(ctx) {
    try {
        const userId = ctx.from.id;
        const username = ctx.from.username;
        
        logger.info('–ö–æ–º–∞–Ω–¥–∞ /start', { userId, username });
        
        // –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userBalance = getUserBalance(userId);
        
        // –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        const referralStats = getReferralStats(userId);
        
        // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–æ–≤–æ–º—É –¥–∏–∑–∞–π–Ω—É
        const welcomeMessage = `üöÄ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Magnum Stars!**\n` +
            `üíé –¢–≤–æ–π –ø—É—Ç—å –∫ –Ω–∞–≥—Ä–∞–¥–∞–º —É–∂–µ –Ω–∞—á–∞–ª—Å—è!\n\n` +
            `üéÆ –ò–≥—Ä–∞–π –≤ Magnum Stars, –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π Magnum Coins, –æ–±–º–µ–Ω–∏–≤–∞–π –∏—Ö –Ω–∞ ‚≠ê –∏ –≤—ã–≤–æ–¥–∏ –ø—Ä—è–º–æ –≤ –±–æ—Ç–µ!\n\n` +
            `üë§ **–ü—Ä–æ—Ñ–∏–ª—å**\n` +
            `‚îú üÜî ID: \`${userId}\`\n` +
            `‚îî ‚ú® –ò–º—è: ${ctx.from.first_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n\n` +
            `üíé **–ë–∞–ª–∞–Ω—Å**\n` +
            `‚îú ‚≠ê Stars: ${userBalance.stars}\n` +
            `‚îî ü™ô Magnum Coins: ${userBalance.coins}\n\n` +
            `üë• **–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞**\n` +
            `‚îú üë• –î—Ä—É–∑–µ–π –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ: ${referralStats.totalReferrals}\n` +
            `‚îî üí∞ –î–æ—Ö–æ–¥: ${referralStats.totalEarned.stars} ‚≠ê\n\n` +
            `üìä **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ**\n` +
            `‚îú üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 0\n` +
            `‚îî üíé –í—Å–µ–≥–æ –≤—ã–≤–µ–¥–µ–Ω–æ: 0 ‚≠ê\n\n` +
            `üéØ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏ –¥–≤–∏–≥–∞–π—Ç–µ—Å—å –¥–∞–ª—å—à–µ üöÄ`;
        
        // –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        const mainMenu = Markup.inlineKeyboard([
            [Markup.button.callback('üí∞ –ú–∞–π–Ω–µ—Ä—ã', 'miners')],
            [Markup.button.callback('üë§ –ü—Ä–æ—Ñ–∏–ª—å', 'profile')],
            [Markup.button.callback('‚≠ê –í—ã–≤–µ—Å—Ç–∏ –∑–≤–µ–∑–¥—ã', 'withdraw')],
            [Markup.button.callback('üîë –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á', 'activate_key')],
            [Markup.button.callback('üë• –†–µ—Ñ–µ—Ä–∞–ª—ã', 'referrals')],
            [Markup.button.webApp('üåê WebApp', 'https://magnumstarbot.onrender.com')],
            [Markup.button.callback('‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å', 'admin_panel')]
        ]);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await ctx.reply(welcomeMessage, {
            parse_mode: 'Markdown',
            reply_markup: mainMenu.reply_markup
        });
        
        logger.info('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', { userId });
        
    } catch (error) {
        logger.error('–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ /start', error, { userId: ctx?.from?.id });
        throw error;
    }
}

module.exports = startHandler;