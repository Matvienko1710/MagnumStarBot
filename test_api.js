// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –±–∞–ª–∞–Ω—Å–∞
const fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));

async function testBalanceAPI() {
    const baseUrl = 'http://localhost:3000';
    const testUserId = 123456;
    
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API –±–∞–ª–∞–Ω—Å–∞...');
    
    try {
        // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
        console.log('\n1Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        const getResponse = await fetch(`${baseUrl}/api/balance/${testUserId}`);
        const getData = await getResponse.json();
        console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞:', getData);
        
        // –¢–µ—Å—Ç 2: –ü–æ–ø—ã—Ç–∫–∞ —Å–ø–∏—Å–∞–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ (–¥–æ–ª–∂–Ω–∞ —Å—Ä–∞–±–æ—Ç–∞—Ç—å)
        console.log('\n2Ô∏è‚É£ –ü—ã—Ç–∞–µ–º—Å—è —Å–ø–∏—Å–∞—Ç—å 50 –º–æ–Ω–µ—Ç...');
        const deductResponse = await fetch(`${baseUrl}/api/balance/${testUserId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                type: 'coins',
                amount: -50,
                reason: 'test_deduction'
            })
        });
        const deductData = await deductResponse.json();
        console.log('‚úÖ –°–ø–∏—Å–∞–Ω–∏–µ 50 –º–æ–Ω–µ—Ç:', deductData);
        
        // –¢–µ—Å—Ç 3: –ü–æ–ø—ã—Ç–∫–∞ —Å–ø–∏—Å–∞—Ç—å –±–æ–ª—å—à–µ, —á–µ–º –µ—Å—Ç—å (–¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –æ—à–∏–±–∫—É)
        console.log('\n3Ô∏è‚É£ –ü—ã—Ç–∞–µ–º—Å—è —Å–ø–∏—Å–∞—Ç—å 10000 –º–æ–Ω–µ—Ç (–±–æ–ª—å—à–µ —á–µ–º –µ—Å—Ç—å)...');
        const overDeductResponse = await fetch(`${baseUrl}/api/balance/${testUserId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                type: 'coins',
                amount: -10000,
                reason: 'test_over_deduction'
            })
        });
        const overDeductData = await overDeductResponse.json();
        console.log('‚úÖ –ü–æ–ø—ã—Ç–∫–∞ —Å–ø–∏—Å–∞—Ç—å 10000 –º–æ–Ω–µ—Ç:', overDeductData);
        
        // –¢–µ—Å—Ç 4: –§–∏–Ω–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
        console.log('\n4Ô∏è‚É£ –§–∏–Ω–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å...');
        const finalResponse = await fetch(`${baseUrl}/api/balance/${testUserId}`);
        const finalData = await finalResponse.json();
        console.log('‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å:', finalData);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã (–¥–∞–µ–º –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä—É –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è)
setTimeout(testBalanceAPI, 3000);
