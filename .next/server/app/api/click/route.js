"use strict";(()=>{var e={};e.id=732,e.ids=[732],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6050:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>y,patchFetch:()=>f,requestAsyncStorage:()=>m,routeModule:()=>g,serverHooks:()=>p,staticGenerationAsyncStorage:()=>d});var o={};t.r(o),t.d(o,{POST:()=>c});var n=t(9303),s=t(8716),a=t(670),l=t(7070),i=t(2021),u=t(2690);async function c(e){try{let{telegramId:r}=await e.json();if(console.log("Click API called with telegramId:",r),!r)return console.log("No telegramId provided"),l.NextResponse.json({error:"Telegram ID is required"},{status:400});let t=parseInt(r);if(isNaN(t)||t<1e8||t>999999999)return console.log("Invalid Telegram ID format:",r),l.NextResponse.json({error:"Invalid Telegram ID format"},{status:400});await (0,i.Z)();let o=await u.Z.findOne({telegramId:t});if(o?console.log("Found existing user:",{telegramId:o.telegramId,magnumCoins:o.magnumCoins,energy:o.energy}):(console.log("User not found, creating new user with telegramId:",r),o=new u.Z({telegramId:t,magnumCoins:100,stars:0,energy:100,maxEnergy:100,totalClicks:0,level:1,lastEnergyRestore:new Date,clickPower:1,upgrades:[]}),await o.save(),console.log("New user created:",o)),o.energy<=0)return console.log("User has no energy left"),l.NextResponse.json({error:"No energy left"},{status:400});return o.magnumCoins+=1,o.stars+=1e-4,o.energy-=1,o.totalClicks+=1,o.level=Math.floor(o.totalClicks/100)+1,await o.save(),console.log("User updated:",{magnumCoins:o.magnumCoins,energy:o.energy,totalClicks:o.totalClicks}),l.NextResponse.json({success:!0,user:{magnumCoins:o.magnumCoins,stars:o.stars,energy:o.energy,totalClicks:o.totalClicks,level:o.level}})}catch(e){return console.error("Error processing click:",e),l.NextResponse.json({error:"Internal server error"},{status:500})}}let g=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/click/route",pathname:"/api/click",filename:"route",bundlePath:"app/api/click/route"},resolvedPagePath:"C:\\Users\\matvi\\OneDrive\\Рабочий стол\\MagnumStarBot-1\\app\\api\\click\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:m,staticGenerationAsyncStorage:d,serverHooks:p}=g,y="/api/click/route";function f(){return(0,a.patchFetch)({serverHooks:p,staticGenerationAsyncStorage:d})}},2690:(e,r,t)=>{t.d(r,{Z:()=>a});var o=t(1185),n=t.n(o);let s=new o.Schema({telegramId:{type:Number,required:!0,unique:!0},username:{type:String},firstName:{type:String},lastName:{type:String},magnumCoins:{type:Number,default:0},stars:{type:Number,default:0},energy:{type:Number,default:100},maxEnergy:{type:Number,default:100},totalClicks:{type:Number,default:0},level:{type:Number,default:1},lastEnergyRestore:{type:Date,default:Date.now},clickPower:{type:Number,default:1},upgrades:[{id:{type:String,required:!0},level:{type:Number,default:0}}]},{timestamps:!0}),a=n().models.User||n().model("User",s)},2021:(e,r,t)=>{t.d(r,{Z:()=>l});var o=t(1185),n=t.n(o);let s=process.env.MONGODB_URI,a=!1,l=async function(){if(!s)return console.warn("MongoDB connection skipped - running in test mode"),null;if(a)return console.log("MongoDB already connected"),n();try{return await n().connect(s,{bufferCommands:!1,maxPoolSize:10,serverSelectionTimeoutMS:5e3,socketTimeoutMS:45e3}),a=!0,console.log("MongoDB connected successfully"),n()}catch(e){throw console.error("MongoDB connection error:",e),a=!1,e}}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[276,972],()=>t(6050));module.exports=o})();