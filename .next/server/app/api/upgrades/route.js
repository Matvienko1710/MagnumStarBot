"use strict";(()=>{var e={};e.id=899,e.ids=[899],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5519:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>y,patchFetch:()=>N,requestAsyncStorage:()=>g,routeModule:()=>m,serverHooks:()=>f,staticGenerationAsyncStorage:()=>c});var a={};t.r(a),t.d(a,{GET:()=>p,POST:()=>d});var n=t(9303),s=t(8716),o=t(670),u=t(7070),i=t(6039),l=t(2690);async function d(e){try{let{telegramId:r,upgradeId:t,level:a}=await e.json();if(console.log("Upgrade API called with:",{telegramId:r,upgradeId:t,level:a}),!r||!t||void 0===a)return console.log("Missing required parameters"),u.NextResponse.json({error:"Missing required parameters"},{status:400});let n=parseInt(r);if(isNaN(n)||n<1e8||n>999999999)return console.log("Invalid Telegram ID format:",r),u.NextResponse.json({error:"Invalid Telegram ID format"},{status:400});await i.Z;let s=await l.Z.findOne({telegramId:n});if(!s)return console.log("User not found for upgrade"),u.NextResponse.json({error:"User not found"},{status:404});s.upgrades||(s.upgrades=[]);let o=s.upgrades.find(e=>e.id===t);switch(o||(o={id:t,level:0},s.upgrades.push(o)),o.level=a,t){case"click_power":s.clickPower=1+a;break;case"energy_capacity":s.maxEnergy=100+10*a,s.energy>s.maxEnergy&&(s.energy=s.maxEnergy)}return await s.save(),console.log("User upgrade saved:",{telegramId:s.telegramId,upgradeId:t,level:a}),u.NextResponse.json({success:!0,upgrade:{id:t,level:a}})}catch(e){return console.error("Error processing upgrade:",e),u.NextResponse.json({error:"Internal server error"},{status:500})}}async function p(e){try{let{searchParams:r}=new URL(e.url),t=r.get("telegramId");if(console.log("GET /api/upgrades called with telegramId:",t),!t)return console.log("No telegramId provided"),u.NextResponse.json({error:"Telegram ID is required"},{status:400});let a=parseInt(t);if(isNaN(a)||a<1e8||a>999999999)return console.log("Invalid Telegram ID format:",t),u.NextResponse.json({error:"Invalid Telegram ID format"},{status:400});await i.Z;let n=await l.Z.findOne({telegramId:a});if(!n)return console.log("User not found for upgrades"),u.NextResponse.json({error:"User not found"},{status:404});return u.NextResponse.json({success:!0,upgrades:n.upgrades||[]})}catch(e){return console.error("Error fetching upgrades:",e),u.NextResponse.json({error:"Internal server error"},{status:500})}}let m=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/upgrades/route",pathname:"/api/upgrades",filename:"route",bundlePath:"app/api/upgrades/route"},resolvedPagePath:"C:\\Users\\matvi\\OneDrive\\Рабочий стол\\MagnumStarBot-1\\app\\api\\upgrades\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:g,staticGenerationAsyncStorage:c,serverHooks:f}=m,y="/api/upgrades/route";function N(){return(0,o.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:c})}},2690:(e,r,t)=>{t.d(r,{Z:()=>o});var a=t(1185),n=t.n(a);let s=new a.Schema({telegramId:{type:Number,required:!0,unique:!0},username:{type:String},firstName:{type:String},lastName:{type:String},magnumCoins:{type:Number,default:100,min:0},stars:{type:Number,default:0,min:0},energy:{type:Number,default:100,min:0},maxEnergy:{type:Number,default:100,min:1},totalClicks:{type:Number,default:0,min:0},level:{type:Number,default:1,min:1},experience:{type:Number,default:0,min:0},experienceToNext:{type:Number,default:100,min:1},lastEnergyRestore:{type:Date,default:Date.now},clickPower:{type:Number,default:1,min:1},upgrades:[{id:{type:String,required:!0},level:{type:Number,default:0,min:0}}],statistics:{totalEarned:{type:Number,default:0,min:0},totalSpent:{type:Number,default:0,min:0},casesOpened:{type:Number,default:0,min:0},rareItemsFound:{type:Number,default:0,min:0},daysPlayed:{type:Number,default:1,min:1},maxClickStreak:{type:Number,default:0,min:0},currentClickStreak:{type:Number,default:0,min:0},prestigeCount:{type:Number,default:0,min:0}}},{timestamps:!0});s.index({telegramId:1}),s.index({level:-1}),s.index({magnumCoins:-1});let o=n().models.User||n().model("User",s)},6039:(e,r,t)=>{let a;t.d(r,{Z:()=>o,N:()=>u});let n=require("mongodb");if(!process.env.MONGODB_URI)throw Error('Invalid/Missing environment variable: "MONGODB_URI"');let s=process.env.MONGODB_URI,o=a=new n.MongoClient(s,{}).connect();async function u(){return(await a).db("magnum_clicker")}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[276,972],()=>t(5519));module.exports=a})();