"use strict";(()=>{var e={};e.id=309,e.ids=[309],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7883:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>v,patchFetch:()=>h,requestAsyncStorage:()=>x,routeModule:()=>f,serverHooks:()=>N,staticGenerationAsyncStorage:()=>w});var n={};t.r(n),t.d(n,{POST:()=>g});var a=t(9303),s=t(8716),o=t(670),i=t(7070),m=t(2021),u=t(2690),p=t(1185),c=t.n(p);let d=new p.Schema({userId:{type:Number,required:!0},caseType:{type:String,required:!0},caseName:{type:String,required:!0},price:{type:Number,required:!0},rewards:[{type:{type:String,enum:["coins","stars","energy"],required:!0},amount:{type:Number,required:!0}}],openedAt:{type:Date,default:Date.now}},{timestamps:!0}),y=c().models.Case||c().model("Case",d),l={bronze:{name:"Бронзовый кейс",price:100,rewards:[{type:"coins",min:50,max:200},{type:"stars",min:.001,max:.01}]},silver:{name:"Серебряный кейс",price:500,rewards:[{type:"coins",min:300,max:800},{type:"stars",min:.01,max:.05},{type:"energy",min:10,max:30}]},gold:{name:"Золотой кейс",price:1e3,rewards:[{type:"coins",min:800,max:2e3},{type:"stars",min:.05,max:.15},{type:"energy",min:20,max:50}]},platinum:{name:"Платиновый кейс",price:5e3,rewards:[{type:"coins",min:3e3,max:8e3},{type:"stars",min:.1,max:.5},{type:"energy",min:50,max:100}]},mythic:{name:"Мифический кейс",price:15e3,rewards:[{type:"coins",min:1e4,max:25e3},{type:"stars",min:.5,max:2},{type:"energy",min:100,max:200}]}};async function g(e){try{try{await (0,m.Z)()}catch(e){return console.warn("MongoDB connection failed, using test data:",e),i.NextResponse.json({success:!0,rewards:[{type:"coins",amount:150},{type:"stars",amount:.05}],user:{magnumCoins:850,stars:.55,energy:100}})}let{telegramId:r,caseType:t}=await e.json();if(!r||!t)return i.NextResponse.json({error:"Telegram ID and case type are required"},{status:400});let n=l[t];if(!n)return i.NextResponse.json({error:"Invalid case type"},{status:400});let a=await u.Z.findOne({telegramId:r});if(!a)return i.NextResponse.json({error:"User not found"},{status:404});if(a.magnumCoins<n.price)return i.NextResponse.json({error:"Insufficient funds"},{status:400});let s=n.rewards.map(e=>({type:e.type,amount:Math.random()*(e.max-e.min)+e.min}));a.magnumCoins-=n.price,s.forEach(e=>{"coins"===e.type?a.magnumCoins+=Math.floor(e.amount):"stars"===e.type?a.stars+=e.amount:"energy"===e.type&&(a.energy=Math.min(a.maxEnergy,a.energy+Math.floor(e.amount)))}),await a.save();let o=new y({userId:r,caseType:t,caseName:n.name,price:n.price,rewards:s});return await o.save(),i.NextResponse.json({success:!0,rewards:s,user:{magnumCoins:a.magnumCoins,stars:a.stars,energy:a.energy}})}catch(e){return console.error("Error opening case:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}let f=new a.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/cases/open/route",pathname:"/api/cases/open",filename:"route",bundlePath:"app/api/cases/open/route"},resolvedPagePath:"C:\\Users\\matvi\\OneDrive\\Рабочий стол\\MagnumStarBot-1\\app\\api\\cases\\open\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:x,staticGenerationAsyncStorage:w,serverHooks:N}=f,v="/api/cases/open/route";function h(){return(0,o.patchFetch)({serverHooks:N,staticGenerationAsyncStorage:w})}},2690:(e,r,t)=>{t.d(r,{Z:()=>o});var n=t(1185),a=t.n(n);let s=new n.Schema({telegramId:{type:Number,required:!0,unique:!0},username:{type:String},firstName:{type:String},lastName:{type:String},magnumCoins:{type:Number,default:0},stars:{type:Number,default:0},energy:{type:Number,default:100},maxEnergy:{type:Number,default:100},totalClicks:{type:Number,default:0},level:{type:Number,default:1},lastEnergyRestore:{type:Date,default:Date.now},clickPower:{type:Number,default:1},upgrades:[{id:{type:String,required:!0},level:{type:Number,default:0}}]},{timestamps:!0}),o=a().models.User||a().model("User",s)},2021:(e,r,t)=>{t.d(r,{Z:()=>i});var n=t(1185),a=t.n(n);let s=process.env.MONGODB_URI,o=!1,i=async function(){if(!s)return console.warn("MongoDB connection skipped - running in test mode"),null;if(o)return console.log("MongoDB already connected"),a();try{return await a().connect(s,{bufferCommands:!1,maxPoolSize:10,serverSelectionTimeoutMS:5e3,socketTimeoutMS:45e3}),o=!0,console.log("MongoDB connected successfully"),a()}catch(e){throw console.error("MongoDB connection error:",e),o=!1,e}}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[276,972],()=>t(7883));module.exports=n})();