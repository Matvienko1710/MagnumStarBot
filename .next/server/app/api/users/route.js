"use strict";(()=>{var e={};e.id=701,e.ids=[701],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},762:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>f,patchFetch:()=>I,requestAsyncStorage:()=>c,routeModule:()=>d,serverHooks:()=>y,staticGenerationAsyncStorage:()=>p});var a={};t.r(a),t.d(a,{GET:()=>m,POST:()=>g});var s=t(9303),n=t(8716),o=t(670),l=t(7070),i=t(2021),u=t(2690);async function m(e){try{let{searchParams:r}=new URL(e.url),t=r.get("telegramId");if(console.log("GET /api/users called with telegramId:",t),!t)return console.log("No telegramId provided"),l.NextResponse.json({error:"Telegram ID is required"},{status:400});let a=parseInt(t);if(isNaN(a)||a<1e8||a>999999999)return console.log("Invalid Telegram ID format:",t),l.NextResponse.json({error:"Invalid Telegram ID format"},{status:400});try{await (0,i.Z)()}catch(e){return console.error("MongoDB connection failed:",e),l.NextResponse.json({error:"Database connection failed"},{status:500})}console.log("Searching for user with telegramId:",a);let s=await u.Z.findOne({telegramId:a});console.log("Found user in database:",s?{telegramId:s.telegramId,magnumCoins:s.magnumCoins,stars:s.stars,energy:s.energy}:"No user found");let n=await u.Z.find({}).limit(5);return console.log("All users in database (first 5):",n.map(e=>({telegramId:e.telegramId,magnumCoins:e.magnumCoins}))),s?console.log("Using existing user:",{telegramId:s.telegramId,magnumCoins:s.magnumCoins}):(console.log("Creating new user with telegramId:",t),s=new u.Z({telegramId:a,magnumCoins:100,stars:0,energy:100,maxEnergy:100,totalClicks:0,level:1,lastEnergyRestore:new Date,clickPower:1,upgrades:[]}),await s.save(),console.log("New user created:",{telegramId:s.telegramId,magnumCoins:s.magnumCoins})),l.NextResponse.json({success:!0,user:{telegramId:s.telegramId,username:s.username,firstName:s.firstName,lastName:s.lastName,magnumCoins:s.magnumCoins,stars:s.stars,energy:s.energy,maxEnergy:s.maxEnergy,totalClicks:s.totalClicks,level:s.level,lastEnergyRestore:s.lastEnergyRestore,clickPower:s.clickPower||1,upgrades:s.upgrades||[]}})}catch(e){return console.error("Error fetching user:",e),l.NextResponse.json({error:"Internal server error"},{status:500})}}async function g(e){try{await (0,i.Z)();let{telegramId:r,username:t,firstName:a,lastName:s}=await e.json();if(console.log("POST /api/users called with:",{telegramId:r,username:t,firstName:a,lastName:s}),!r)return console.log("No telegramId provided in POST"),l.NextResponse.json({error:"Telegram ID is required"},{status:400});let n=parseInt(r);if(isNaN(n)||n<1e8||n>999999999)return console.log("Invalid Telegram ID format in POST:",r),l.NextResponse.json({error:"Invalid Telegram ID format"},{status:400});let o=await u.Z.findOne({telegramId:n});return console.log("Found user for POST:",o?{telegramId:o.telegramId,magnumCoins:o.magnumCoins}:"No user found"),o?(console.log("Updating existing user:",r),o.username=t,o.firstName=a,o.lastName=s,await o.save(),console.log("User updated:",{telegramId:o.telegramId,magnumCoins:o.magnumCoins})):(console.log("Creating new user via POST:",r),o=new u.Z({telegramId:n,username:t,firstName:a,lastName:s,magnumCoins:100,stars:0,energy:100,maxEnergy:100,totalClicks:0,level:1,lastEnergyRestore:new Date,clickPower:1,upgrades:[]}),await o.save(),console.log("New user created via POST:",{telegramId:o.telegramId,magnumCoins:o.magnumCoins})),l.NextResponse.json({success:!0,user:{telegramId:o.telegramId,username:o.username,firstName:o.firstName,lastName:o.lastName,magnumCoins:o.magnumCoins,stars:o.stars,energy:o.energy,maxEnergy:o.maxEnergy,totalClicks:o.totalClicks,level:o.level,lastEnergyRestore:o.lastEnergyRestore,clickPower:o.clickPower||1,upgrades:o.upgrades||[]}})}catch(e){return console.error("Error creating/updating user:",e),l.NextResponse.json({error:"Internal server error"},{status:500})}}let d=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/users/route",pathname:"/api/users",filename:"route",bundlePath:"app/api/users/route"},resolvedPagePath:"C:\\Users\\matvi\\OneDrive\\Рабочий стол\\MagnumStarBot-1\\app\\api\\users\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:c,staticGenerationAsyncStorage:p,serverHooks:y}=d,f="/api/users/route";function I(){return(0,o.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:p})}},2690:(e,r,t)=>{t.d(r,{Z:()=>o});var a=t(1185),s=t.n(a);let n=new a.Schema({telegramId:{type:Number,required:!0,unique:!0},username:{type:String},firstName:{type:String},lastName:{type:String},magnumCoins:{type:Number,default:0},stars:{type:Number,default:0},energy:{type:Number,default:100},maxEnergy:{type:Number,default:100},totalClicks:{type:Number,default:0},level:{type:Number,default:1},lastEnergyRestore:{type:Date,default:Date.now},clickPower:{type:Number,default:1},upgrades:[{id:{type:String,required:!0},level:{type:Number,default:0}}]},{timestamps:!0}),o=s().models.User||s().model("User",n)},2021:(e,r,t)=>{t.d(r,{Z:()=>l});var a=t(1185),s=t.n(a);let n=process.env.MONGODB_URI,o=!1,l=async function(){if(!n)return console.warn("MongoDB connection skipped - running in test mode"),null;if(o)return console.log("MongoDB already connected"),s();try{return await s().connect(n,{bufferCommands:!1,maxPoolSize:10,serverSelectionTimeoutMS:5e3,socketTimeoutMS:45e3}),o=!0,console.log("MongoDB connected successfully"),s()}catch(e){throw console.error("MongoDB connection error:",e),o=!1,e}}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[276,972],()=>t(762));module.exports=a})();