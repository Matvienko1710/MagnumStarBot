"use strict";(()=>{var e={};e.id=701,e.ids=[701],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},762:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>N,patchFetch:()=>x,requestAsyncStorage:()=>c,routeModule:()=>d,serverHooks:()=>y,staticGenerationAsyncStorage:()=>p});var a={};t.r(a),t.d(a,{GET:()=>u,POST:()=>g});var n=t(9303),s=t(8716),o=t(670),i=t(7070),l=t(6039),m=t(2690);async function u(e){try{let{searchParams:r}=new URL(e.url),t=r.get("telegramId");if(console.log("GET /api/users called with telegramId:",t),!t)return console.log("No telegramId provided"),i.NextResponse.json({error:"Telegram ID is required"},{status:400});let a=parseInt(t);if(isNaN(a)||a<1e8||a>999999999)return console.log("Invalid Telegram ID format:",t),i.NextResponse.json({error:"Invalid Telegram ID format"},{status:400});try{await l.Z}catch(e){return console.error("MongoDB connection failed:",e),i.NextResponse.json({error:"Database connection failed"},{status:500})}console.log("Searching for user with telegramId:",a);let n=await m.Z.findOne({telegramId:a});console.log("Found user in database:",n?{telegramId:n.telegramId,magnumCoins:n.magnumCoins,stars:n.stars,energy:n.energy}:"No user found");let s=await m.Z.find({}).limit(5);return console.log("All users in database (first 5):",s.map(e=>({telegramId:e.telegramId,magnumCoins:e.magnumCoins}))),n?console.log("Using existing user:",{telegramId:n.telegramId,magnumCoins:n.magnumCoins}):(console.log("Creating new user with telegramId:",t),n=new m.Z({telegramId:a,magnumCoins:100,stars:0,energy:100,maxEnergy:100,totalClicks:0,level:1,experience:0,experienceToNext:100,lastEnergyRestore:new Date,clickPower:1,upgrades:[],statistics:{totalEarned:0,totalSpent:0,casesOpened:0,rareItemsFound:0,daysPlayed:1,maxClickStreak:0,currentClickStreak:0,prestigeCount:0}}),await n.save(),console.log("New user created:",{telegramId:n.telegramId,magnumCoins:n.magnumCoins})),i.NextResponse.json({success:!0,user:{telegramId:n.telegramId,username:n.username,firstName:n.firstName,lastName:n.lastName,magnumCoins:n.magnumCoins,stars:n.stars,energy:n.energy,maxEnergy:n.maxEnergy,totalClicks:n.totalClicks,level:n.level,experience:n.experience,experienceToNext:n.experienceToNext,lastEnergyRestore:n.lastEnergyRestore,clickPower:n.clickPower,upgrades:n.upgrades,statistics:n.statistics}})}catch(e){return console.error("Error fetching user:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}async function g(e){try{await l.Z;let{telegramId:r,username:t,firstName:a,lastName:n}=await e.json();if(console.log("POST /api/users called with:",{telegramId:r,username:t,firstName:a,lastName:n}),!r)return console.log("No telegramId provided in POST"),i.NextResponse.json({error:"Telegram ID is required"},{status:400});let s=parseInt(r);if(isNaN(s)||s<1e8||s>999999999)return console.log("Invalid Telegram ID format in POST:",r),i.NextResponse.json({error:"Invalid Telegram ID format"},{status:400});let o=await m.Z.findOne({telegramId:s});return console.log("Found user for POST:",o?{telegramId:o.telegramId,magnumCoins:o.magnumCoins}:"No user found"),o?(console.log("Updating existing user:",r),o.username=t,o.firstName=a,o.lastName=n,await o.save(),console.log("User updated:",{telegramId:o.telegramId,magnumCoins:o.magnumCoins})):(console.log("Creating new user via POST:",r),o=new m.Z({telegramId:s,username:t,firstName:a,lastName:n,magnumCoins:100,stars:0,energy:100,maxEnergy:100,totalClicks:0,level:1,experience:0,experienceToNext:100,lastEnergyRestore:new Date,clickPower:1,upgrades:[],statistics:{totalEarned:0,totalSpent:0,casesOpened:0,rareItemsFound:0,daysPlayed:1,maxClickStreak:0,currentClickStreak:0,prestigeCount:0}}),await o.save(),console.log("New user created via POST:",{telegramId:o.telegramId,magnumCoins:o.magnumCoins})),i.NextResponse.json({success:!0,user:{telegramId:o.telegramId,username:o.username,firstName:o.firstName,lastName:o.lastName,magnumCoins:o.magnumCoins,stars:o.stars,energy:o.energy,maxEnergy:o.maxEnergy,totalClicks:o.totalClicks,level:o.level,experience:o.experience,experienceToNext:o.experienceToNext,lastEnergyRestore:o.lastEnergyRestore,clickPower:o.clickPower,upgrades:o.upgrades,statistics:o.statistics}})}catch(e){return console.error("Error creating/updating user:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}let d=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/users/route",pathname:"/api/users",filename:"route",bundlePath:"app/api/users/route"},resolvedPagePath:"C:\\Users\\matvi\\OneDrive\\Рабочий стол\\MagnumStarBot-1\\app\\api\\users\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:c,staticGenerationAsyncStorage:p,serverHooks:y}=d,N="/api/users/route";function x(){return(0,o.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:p})}},2690:(e,r,t)=>{t.d(r,{Z:()=>o});var a=t(1185),n=t.n(a);let s=new a.Schema({telegramId:{type:Number,required:!0,unique:!0},username:{type:String},firstName:{type:String},lastName:{type:String},magnumCoins:{type:Number,default:100,min:0},stars:{type:Number,default:0,min:0},energy:{type:Number,default:100,min:0},maxEnergy:{type:Number,default:100,min:1},totalClicks:{type:Number,default:0,min:0},level:{type:Number,default:1,min:1},experience:{type:Number,default:0,min:0},experienceToNext:{type:Number,default:100,min:1},lastEnergyRestore:{type:Date,default:Date.now},clickPower:{type:Number,default:1,min:1},upgrades:[{id:{type:String,required:!0},level:{type:Number,default:0,min:0}}],statistics:{totalEarned:{type:Number,default:0,min:0},totalSpent:{type:Number,default:0,min:0},casesOpened:{type:Number,default:0,min:0},rareItemsFound:{type:Number,default:0,min:0},daysPlayed:{type:Number,default:1,min:1},maxClickStreak:{type:Number,default:0,min:0},currentClickStreak:{type:Number,default:0,min:0},prestigeCount:{type:Number,default:0,min:0}}},{timestamps:!0});s.index({telegramId:1}),s.index({level:-1}),s.index({magnumCoins:-1});let o=n().models.User||n().model("User",s)},6039:(e,r,t)=>{let a;t.d(r,{Z:()=>o,N:()=>i});let n=require("mongodb");if(!process.env.MONGODB_URI)throw Error('Invalid/Missing environment variable: "MONGODB_URI"');let s=process.env.MONGODB_URI,o=a=new n.MongoClient(s,{}).connect();async function i(){return(await a).db("magnum_clicker")}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[276,972],()=>t(762));module.exports=a})();