const fs = require('fs');
const path = require('path');

// –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—ã–µ PNG –∏–∫–æ–Ω–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—è –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π PNG —Ñ–æ—Ä–º–∞—Ç
const createMinimalPNG = (size) => {
  // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π PNG –∑–∞–≥–æ–ª–æ–≤–æ–∫ + 1x1 –ø–∏–∫—Å–µ–ª—å
  // –≠—Ç–æ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ placeholder, –±—Ä–∞—É–∑–µ—Ä –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ—Ç
  const pngData = Buffer.from([
    0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, // PNG signature
    0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, // IHDR chunk
    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, // 1x1 dimensions
    0x08, 0x02, 0x00, 0x00, 0x00, 0x90, 0x77, 0x53, 0xDE, // bit depth, color type, etc.
    0x00, 0x00, 0x00, 0x0C, 0x49, 0x44, 0x41, 0x54, // IDAT chunk
    0x08, 0x99, 0x01, 0x01, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01, // image data
    0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82 // IEND chunk
  ]);
  
  return pngData;
};

// –°–æ–∑–¥–∞–µ–º PNG —Ñ–∞–π–ª—ã
const sizes = [192, 512];

sizes.forEach(size => {
  const pngData = createMinimalPNG(size);
  const filename = `icon-${size}x${size}.png`;
  const filepath = path.join(__dirname, '..', 'public', filename);
  
  fs.writeFileSync(filepath, pngData);
  console.log(`‚úÖ Created ${filename}`);
});

// –°–æ–∑–¥–∞–µ–º favicon
const faviconData = createMinimalPNG(32);
fs.writeFileSync(path.join(__dirname, '..', 'public', 'favicon.ico'), faviconData);
console.log(`‚úÖ Created favicon.ico`);

console.log('\nüé® –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ PNG –∏–∫–æ–Ω–∫–∏ —Å–æ–∑–¥–∞–Ω—ã!');
console.log('üì± –≠—Ç–∏ –∏–∫–æ–Ω–∫–∏ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ placeholder');
console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–º–µ–Ω–∏—Ç—å –∏—Ö –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ PNG –∏–∫–æ–Ω–∫–∏');
