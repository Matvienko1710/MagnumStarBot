const https = require('https');

// URL –≤–∞—à–µ–≥–æ Vercel –ø—Ä–æ–µ–∫—Ç–∞
const WEBAPP_URL = 'https://magnmstartbot1.vercel.app';

// –ó–∞–º–µ–Ω–∏—Ç–µ YOUR_BOT_TOKEN –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
const BOT_TOKEN = 'YOUR_BOT_TOKEN';

if (BOT_TOKEN === 'YOUR_BOT_TOKEN') {
  console.error('‚ùå –û—à–∏–±–∫–∞: –ó–∞–º–µ–Ω–∏—Ç–µ YOUR_BOT_TOKEN –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞');
  process.exit(1);
}

async function setWebhook() {
  try {
    const webhookUrl = `${WEBAPP_URL}/api/bot/webhook`;
    
    console.log('üîó –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook...');
    console.log('URL:', webhookUrl);
    
    const response = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/setWebhook`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        url: webhookUrl
      })
    });
    
    const result = await response.json();
    
    if (result.ok) {
      console.log('‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
      console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', result);
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook:', result);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

setWebhook();
